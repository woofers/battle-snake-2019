apply plugin: 'java'
apply plugin: 'war'

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'sh', './version.sh'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

group = 'com.battlesnakes'
description = "Battlesnake"
version = getVersionName()

sourceCompatibility = 1.8
targetCompatibility = 1.8

war {
    archiveName = rootProject.name + '.war'
    doFirst {
        manifest {
            attributes("Implementation-Title": project.name,
                       "Implementation-Version": version,
                       "Implementation-Timestamp": new Date()
            )
        }
    }
}
war.mustRunAfter clean

ext {
    gsonVersion = '2.8.5'
    junitVersion = '4.12'
    servletVersion = '4.0.1'
    log4jVersion = '2.8'
    webappRunnerVersion = '8.5.11.3'
}

repositories {
    mavenCentral()
    maven {
        url "https://artifactory.cronapp.io/public-release/"
    }
}

dependencies {
    compile "com.google.code.gson:gson:$gsonVersion"
    compile "com.google.code.gson:gson-extras:$gsonVersion"
    compile "javax.servlet:javax.servlet-api:$servletVersion"
    compile "com.github.jsimone:webapp-runner:$webappRunnerVersion"
    compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-web:$log4jVersion"
    testCompile "junit:junit:$junitVersion"
}

clean.doFirst {
    delete "${rootDir}/target"
}

compileJava {
    options.compilerArgs += '-proc:none'
}

task copyRunner(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

task stage() {
    dependsOn clean, war
}
stage.dependsOn(copyRunner)

task run() {
    dependsOn stage
    doLast {
        exec {
            workingDir "$buildDir"
            commandLine 'java', '-jar',
              "server/webapp-runner-${rootProject.ext.webappRunnerVersion}.jar",
              "libs/$war.archiveName"
        }
    }
}
